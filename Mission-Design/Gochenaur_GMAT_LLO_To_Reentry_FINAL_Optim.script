%General Mission Analysis Tool(GMAT) Script
%Created: 2021-02-18 16:53:58

%This script developed by GMAT creators
%Edited by Daniel Gochenaur


%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft MoonSat;
GMAT MoonSat.DateFormat = UTCGregorian;
%GMAT MoonSat.Epoch = '04 Sep 2025 20:00:00.000'; %Node
GMAT MoonSat.Epoch = '05 Sep 2025 01:00:00.000'; %Node
%GMAT MoonSat.Epoch = '05 Sep 2025 22:00:00.000'; %Node
%GMAT MoonSat.Epoch = '08 Sep 2025 01:00:00.000'; %Node
%GMAT MoonSat.Epoch = '15 Sep 2025 01:00:00.000'; %Not Node
%GMAT MoonSat.Epoch = '26 Nov 2025 01:00:00.000';  %Node
%GMAT MoonSat.Epoch = '12 Dec 2026 01:00:00.000';  %Not Node
%GMAT MoonSat.Epoch = '17 Dec 2026 01:00:00.000';  %Node
GMAT MoonSat.CoordinateSystem = MoonInertial;
GMAT MoonSat.DisplayStateType = Keplerian;
GMAT MoonSat.SMA = 1838;
GMAT MoonSat.ECC = 0.0;
GMAT MoonSat.INC = 90;
GMAT MoonSat.RAAN = 17.85;
GMAT MoonSat.AOP = 90;
GMAT MoonSat.TA = -10;
GMAT MoonSat.DryMass = 850;
GMAT MoonSat.Cd = 2.2;
GMAT MoonSat.Cr = 1.8;
GMAT MoonSat.DragArea = 15;
GMAT MoonSat.SRPArea = 20;
GMAT MoonSat.SPADDragScaleFactor = 1;
GMAT MoonSat.SPADSRPScaleFactor = 1;
GMAT MoonSat.NAIFId = -10001001;
GMAT MoonSat.NAIFIdReferenceFrame = -9001001;
GMAT MoonSat.OrbitColor = Red;
GMAT MoonSat.TargetColor = Teal;
GMAT MoonSat.OrbitErrorCovariance = [ 1e+70 0 0 0 0 0 ; 0 1e+70 0 0 0 0 ; 0 0 1e+70 0 0 0 ; 0 0 0 1e+70 0 0 ; 0 0 0 0 1e+70 0 ; 0 0 0 0 0 1e+70 ];
GMAT MoonSat.CdSigma = 1e+70;
GMAT MoonSat.CrSigma = 1e+70;
GMAT MoonSat.Id = 'SatId';
GMAT MoonSat.Attitude = CoordinateSystemFixed;
GMAT MoonSat.SPADSRPInterpolationMethod = Bilinear;
GMAT MoonSat.SPADSRPScaleFactorSigma = 1e+70;
GMAT MoonSat.SPADDragInterpolationMethod = Bilinear;
GMAT MoonSat.SPADDragScaleFactorSigma = 1e+70;
GMAT MoonSat.ModelFile = 'aura.3ds';
GMAT MoonSat.ModelOffsetX = 0;
GMAT MoonSat.ModelOffsetY = 0;
GMAT MoonSat.ModelOffsetZ = 0;
GMAT MoonSat.ModelRotationX = 0;
GMAT MoonSat.ModelRotationY = 0;
GMAT MoonSat.ModelRotationZ = 0;
GMAT MoonSat.ModelScale = 1;
GMAT MoonSat.AttitudeDisplayStateType = 'Quaternion';
GMAT MoonSat.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT MoonSat.AttitudeCoordinateSystem = MoonInertial;
GMAT MoonSat.EulerAngleSequence = '321';
%This script developed by GMAT creators
%Edited by Daniel Gochenaur

Create Spacecraft InitSat;

%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel NearMoonProp_ForceModel;
GMAT NearMoonProp_ForceModel.CentralBody = Luna;
GMAT NearMoonProp_ForceModel.PointMasses = {Sun, Earth, Luna};
GMAT NearMoonProp_ForceModel.Drag = None;
GMAT NearMoonProp_ForceModel.SRP = On;
GMAT NearMoonProp_ForceModel.RelativisticCorrection = Off;
GMAT NearMoonProp_ForceModel.ErrorControl = RSSStep;
GMAT NearMoonProp_ForceModel.SRP.Flux = 1367;
GMAT NearMoonProp_ForceModel.SRP.SRPModel = Spherical;
GMAT NearMoonProp_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel NearEarthProp_ForceModel;
GMAT NearEarthProp_ForceModel.CentralBody = Earth;
GMAT NearEarthProp_ForceModel.PointMasses = {Earth, Sun, Luna};
GMAT NearEarthProp_ForceModel.Drag = None;
GMAT NearEarthProp_ForceModel.SRP = On;
GMAT NearEarthProp_ForceModel.RelativisticCorrection = Off;
GMAT NearEarthProp_ForceModel.ErrorControl = RSSStep;
GMAT NearEarthProp_ForceModel.SRP.Flux = 1367;
GMAT NearEarthProp_ForceModel.SRP.SRPModel = Spherical;
GMAT NearEarthProp_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel EarthPointMass_ForceModel;
GMAT EarthPointMass_ForceModel.CentralBody = Earth;
GMAT EarthPointMass_ForceModel.PointMasses = {Earth};
GMAT EarthPointMass_ForceModel.Drag = None;
GMAT EarthPointMass_ForceModel.SRP = Off;
GMAT EarthPointMass_ForceModel.RelativisticCorrection = Off;
GMAT EarthPointMass_ForceModel.ErrorControl = RSSStep;

Create ForceModel MoonPointMass_ForceModel;
GMAT EarthPointMass_ForceModel.CentralBody = Luna;
GMAT EarthPointMass_ForceModel.PointMasses = {Luna};
GMAT EarthPointMass_ForceModel.Drag = None;
GMAT EarthPointMass_ForceModel.SRP = Off;
GMAT EarthPointMass_ForceModel.RelativisticCorrection = Off;
GMAT EarthPointMass_ForceModel.ErrorControl = RSSStep;

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator MoonPointMass;
GMAT MoonPointMass.FM = MoonPointMass_ForceModel;
GMAT MoonPointMass.Type = RungeKutta89;
GMAT MoonPointMass.InitialStepSize = 60;
GMAT MoonPointMass.Accuracy = 9.999999999999999e-12;
GMAT MoonPointMass.MinStep = 0.001;
GMAT MoonPointMass.MaxStep = 86400;
GMAT MoonPointMass.MaxStepAttempts = 50;
GMAT MoonPointMass.StopIfAccuracyIsViolated = true;

Create Propagator NearMoonProp;
GMAT NearMoonProp.FM = NearMoonProp_ForceModel;
GMAT NearMoonProp.Type = RungeKutta89;
GMAT NearMoonProp.InitialStepSize = 60;
GMAT NearMoonProp.Accuracy = 9.999999999999999e-12;
GMAT NearMoonProp.MinStep = 0.001;
GMAT NearMoonProp.MaxStep = 86400;
GMAT NearMoonProp.MaxStepAttempts = 50;
GMAT NearMoonProp.StopIfAccuracyIsViolated = true;

Create Propagator NearEarthProp;
GMAT NearEarthProp.FM = NearEarthProp_ForceModel;
GMAT NearEarthProp.Type = RungeKutta89;
GMAT NearEarthProp.InitialStepSize = 60;
GMAT NearEarthProp.Accuracy = 9.999999999999999e-12;
GMAT NearEarthProp.MinStep = 0.001;
GMAT NearEarthProp.MaxStep = 160000;
GMAT NearEarthProp.MaxStepAttempts = 50;
GMAT NearEarthProp.StopIfAccuracyIsViolated = true;

Create Propagator EarthPointMass;
GMAT EarthPointMass.FM = EarthPointMass_ForceModel;
GMAT EarthPointMass.Type = RungeKutta89;
GMAT EarthPointMass.InitialStepSize = 60;
GMAT EarthPointMass.Accuracy = 9.999999999999999e-12;
GMAT EarthPointMass.MinStep = 0.001;
GMAT EarthPointMass.MaxStep = 2700;
GMAT EarthPointMass.MaxStepAttempts = 50;
GMAT EarthPointMass.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Burns
%----------------------------------------

Create ImpulsiveBurn EOI;
GMAT EOI.CoordinateSystem = Local;
GMAT EOI.Origin = Luna;
GMAT EOI.Axes = VNB;
%GMAT EOI.Element1 = -0.87;
%GMAT EOI.Element2 = 0.53;
%GMAT EOI.Element3 = -0.18;
GMAT EOI.Element1 = 0.87;
GMAT EOI.Element2 = 0.53;
GMAT EOI.Element3 = 0.18;
GMAT EOI.DecrementMass = false;
GMAT EOI.Isp = 300;
GMAT EOI.GravitationalAccel = 9.81;

Create ImpulsiveBurn LOI;
GMAT LOI.CoordinateSystem = Local;
GMAT LOI.Origin = Luna;
GMAT LOI.Axes = VNB;
GMAT LOI.Element1 = -0.5;
GMAT LOI.Element2 = 0;
GMAT LOI.Element3 = 0;
GMAT LOI.DecrementMass = false;
GMAT LOI.Isp = 300;
GMAT LOI.GravitationalAccel = 9.81;

Create ImpulsiveBurn FinalBurn;
GMAT FinalBurn.CoordinateSystem = Local;
GMAT FinalBurn.Origin = Earth;
GMAT FinalBurn.Axes = VNB;
GMAT FinalBurn.Element1 = -0.77323;
GMAT FinalBurn.Element2 = 0.35998;
GMAT FinalBurn.Element3 = 0.00998;
GMAT FinalBurn.DecrementMass = false;
GMAT FinalBurn.Isp = 300;
GMAT FinalBurn.GravitationalAccel = 9.81;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem EarthMoonRot;
GMAT EarthMoonRot.Origin = Earth;
GMAT EarthMoonRot.Axes = ObjectReferenced;
GMAT EarthMoonRot.XAxis = R;
GMAT EarthMoonRot.ZAxis = N;
GMAT EarthMoonRot.Primary = Earth;
GMAT EarthMoonRot.Secondary = Luna;

Create CoordinateSystem MoonInertial;
GMAT MoonInertial.Origin = Luna;
GMAT MoonInertial.Axes = BodyInertial;

%----------------------------------------
%---------- Solvers
%----------------------------------------

Create DifferentialCorrector DC1;
GMAT DC1.ShowProgress = true;
GMAT DC1.ReportStyle = Normal;
GMAT DC1.ReportFile = 'DifferentialCorrectorDC1.data';
GMAT DC1.MaximumIterations = 80;
GMAT DC1.DerivativeMethod = ForwardDifference;
GMAT DC1.Algorithm = NewtonRaphson;

%----------------------------------------
%---------- Solvers
%----------------------------------------

Create FminconOptimizer NLP;
GMAT NLP.MaximumIterations = 50;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView EarthMoonRotView;
GMAT EarthMoonRotView.SolverIterations = Current;
GMAT EarthMoonRotView.UpperLeft = [ 0.05294506949040371 0.003603603603603604 ];
GMAT EarthMoonRotView.Size = [ 0.5433487756452681 1.243243243243243 ];
GMAT EarthMoonRotView.RelativeZOrder = 23;
GMAT EarthMoonRotView.Maximized = false;
GMAT EarthMoonRotView.Add = {MoonSat, Earth, Luna};
GMAT EarthMoonRotView.CoordinateSystem = EarthMoonRot;
GMAT EarthMoonRotView.DrawObject = [ true true true ];
GMAT EarthMoonRotView.DataCollectFrequency = 1;
GMAT EarthMoonRotView.UpdatePlotFrequency = 50;
GMAT EarthMoonRotView.NumPointsToRedraw = 0;
GMAT EarthMoonRotView.ShowPlot = true;
GMAT EarthMoonRotView.MaxPlotPoints = 20000;
GMAT EarthMoonRotView.ShowLabels = true;
GMAT EarthMoonRotView.ViewPointReference = Earth;
GMAT EarthMoonRotView.ViewPointVector = [ 10000 0 30000 ];
GMAT EarthMoonRotView.ViewDirection = Earth;
GMAT EarthMoonRotView.ViewScaleFactor = 40;
GMAT EarthMoonRotView.ViewUpCoordinateSystem = EarthMoonRot;
GMAT EarthMoonRotView.ViewUpAxis = -X;
GMAT EarthMoonRotView.EclipticPlane = Off;
GMAT EarthMoonRotView.XYPlane = Off;
GMAT EarthMoonRotView.WireFrame = Off;
GMAT EarthMoonRotView.Axes = Off;
GMAT EarthMoonRotView.Grid = Off;
GMAT EarthMoonRotView.SunLine = Off;
GMAT EarthMoonRotView.UseInitialView = On;
GMAT EarthMoonRotView.StarCount = 7000;
GMAT EarthMoonRotView.EnableStars = On;
GMAT EarthMoonRotView.EnableConstellations = Off;

Create OrbitView EarthMoonRotView2;
GMAT EarthMoonRotView2.SolverIterations = Current;
GMAT EarthMoonRotView2.UpperLeft = [ 0.1403044341495698 0.003603603603603604 ];
GMAT EarthMoonRotView2.Size = [ 0.456651224354732 1.243243243243243 ];
GMAT EarthMoonRotView2.RelativeZOrder = 15;
GMAT EarthMoonRotView2.Maximized = false;
GMAT EarthMoonRotView2.Add = {MoonSat, Earth, Luna};
GMAT EarthMoonRotView2.CoordinateSystem = EarthMoonRot;
GMAT EarthMoonRotView2.DrawObject = [ true true true ];
GMAT EarthMoonRotView2.DataCollectFrequency = 1;
GMAT EarthMoonRotView2.UpdatePlotFrequency = 50;
GMAT EarthMoonRotView2.NumPointsToRedraw = 0;
GMAT EarthMoonRotView2.ShowPlot = true;
GMAT EarthMoonRotView2.MaxPlotPoints = 20000;
GMAT EarthMoonRotView2.ShowLabels = true;
GMAT EarthMoonRotView2.ViewPointReference = Earth;
GMAT EarthMoonRotView2.ViewPointVector = [ 10000 0 30000 ];
GMAT EarthMoonRotView2.ViewDirection = Earth;
GMAT EarthMoonRotView2.ViewScaleFactor = 40;
GMAT EarthMoonRotView2.ViewUpCoordinateSystem = EarthMoonRot;
GMAT EarthMoonRotView2.ViewUpAxis = -X;
GMAT EarthMoonRotView2.EclipticPlane = Off;
GMAT EarthMoonRotView2.XYPlane = Off;
GMAT EarthMoonRotView2.WireFrame = Off;
GMAT EarthMoonRotView2.Axes = Off;
GMAT EarthMoonRotView2.Grid = Off;
GMAT EarthMoonRotView2.SunLine = Off;
GMAT EarthMoonRotView2.UseInitialView = On;
GMAT EarthMoonRotView2.StarCount = 7000;
GMAT EarthMoonRotView2.EnableStars = On;
GMAT EarthMoonRotView2.EnableConstellations = Off;

Create OrbitView MoonInertialView;
GMAT MoonInertialView.SolverIterations = Current;
GMAT MoonInertialView.UpperLeft = [ 0.3170086035737922 0.1153153153153153 ];
GMAT MoonInertialView.Size = [ 1.101257445400397 1.052252252252252 ];
GMAT MoonInertialView.RelativeZOrder = 10;
GMAT MoonInertialView.Maximized = false;
GMAT MoonInertialView.Add = {MoonSat, Luna, Earth};
GMAT MoonInertialView.CoordinateSystem = MoonInertial;
GMAT MoonInertialView.DrawObject = [ true true true ];
GMAT MoonInertialView.DataCollectFrequency = 1;
GMAT MoonInertialView.UpdatePlotFrequency = 50;
GMAT MoonInertialView.NumPointsToRedraw = 150;
GMAT MoonInertialView.ShowPlot = true;
GMAT MoonInertialView.MaxPlotPoints = 20000;
GMAT MoonInertialView.ShowLabels = true;
GMAT MoonInertialView.ViewPointReference = Luna;
GMAT MoonInertialView.ViewPointVector = [ 20000 20000 20000 ];
GMAT MoonInertialView.ViewDirection = Luna;
GMAT MoonInertialView.ViewScaleFactor = 1.5;
GMAT MoonInertialView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT MoonInertialView.ViewUpAxis = Z;
GMAT MoonInertialView.EclipticPlane = Off;
GMAT MoonInertialView.XYPlane = On;
GMAT MoonInertialView.WireFrame = Off;
GMAT MoonInertialView.Axes = On;
GMAT MoonInertialView.Grid = Off;
GMAT MoonInertialView.SunLine = Off;
GMAT MoonInertialView.UseInitialView = On;
GMAT MoonInertialView.StarCount = 7000;
GMAT MoonInertialView.EnableStars = On;
GMAT MoonInertialView.EnableConstellations = Off;

Create OrbitView EarthInertialView;
GMAT EarthInertialView.SolverIterations = Current;
GMAT EarthInertialView.UpperLeft = [ 0.6042356055592323 0 ];
GMAT EarthInertialView.Size = [ 0.6419589675711449 1.277477477477478 ];
GMAT EarthInertialView.RelativeZOrder = 5;
GMAT EarthInertialView.Maximized = false;
GMAT EarthInertialView.Add = {MoonSat, Earth, Luna};
GMAT EarthInertialView.CoordinateSystem = EarthMJ2000Eq;
GMAT EarthInertialView.DrawObject = [ true true true ];
GMAT EarthInertialView.DataCollectFrequency = 1;
GMAT EarthInertialView.UpdatePlotFrequency = 50;
GMAT EarthInertialView.NumPointsToRedraw = 0;
GMAT EarthInertialView.ShowPlot = true;
GMAT EarthInertialView.MaxPlotPoints = 20000;
GMAT EarthInertialView.ShowLabels = true;
GMAT EarthInertialView.ViewPointReference = Earth;
GMAT EarthInertialView.ViewPointVector = [ 0 0 30000 ];
GMAT EarthInertialView.ViewDirection = Earth;
GMAT EarthInertialView.ViewScaleFactor = 45;
GMAT EarthInertialView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT EarthInertialView.ViewUpAxis = Z;
GMAT EarthInertialView.EclipticPlane = Off;
GMAT EarthInertialView.XYPlane = Off;
GMAT EarthInertialView.WireFrame = Off;
GMAT EarthInertialView.Axes = On;
GMAT EarthInertialView.Grid = Off;
GMAT EarthInertialView.SunLine = Off;
GMAT EarthInertialView.UseInitialView = On;
GMAT EarthInertialView.StarCount = 7000;
GMAT EarthInertialView.EnableStars = On;
GMAT EarthInertialView.EnableConstellations = Off;

Create ReportFile ReportFile1;
GMAT ReportFile1.SolverIterations = Current;
GMAT ReportFile1.UpperLeft = [ 0.02352941176470588 0.2275 ];
GMAT ReportFile1.Size = [ 0.9 0.78875 ];
GMAT ReportFile1.RelativeZOrder = 33;
GMAT ReportFile1.Maximized = false;
GMAT ReportFile1.Filename = 'ReportFile1.txt';
GMAT ReportFile1.Precision = 16;

GMAT ReportFile1.WriteHeaders = true;
GMAT ReportFile1.LeftJustify = On;
GMAT ReportFile1.ZeroFill = Off;
GMAT ReportFile1.FixedWidth = true;
GMAT ReportFile1.Delimiter = ' ';
GMAT ReportFile1.ColumnWidth = 23;
GMAT ReportFile1.WriteReport = true;

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------
Create Variable Theta RAAN AOP DV DV1 DV2 DV3, bError, incError, eccError, radPerError, burnLoc, RMAGError, TOF;

GMAT ReportFile1.Add = {TOF, Theta, RAAN, AOP, MoonSat.MoonInertial.RAAN, MoonSat.MoonInertial.AOP, MoonSat.ElapsedDays, MoonSat.Earth.RadPer, MoonSat.Luna.RadPer, MoonSat.Luna.RMAG, MoonSat.Earth.RMAG, MoonSat.MoonInertial.INC, EOI.Element1, EOI.Element2, EOI.Element3, DV1, MoonSat.INC, MoonSat.MoonInertial.VX, MoonSat.MoonInertial.VY, MoonSat.MoonInertial.VZ, MoonSat.EarthMJ2000Eq.VX, MoonSat.EarthMJ2000Eq.VY, MoonSat.EarthMJ2000Eq.VZ, MoonSat.MoonInertial.VMAG, MoonSat.EarthMJ2000Eq.VMAG};
%----------------------------------------
%---------- Mission Sequence
%----------------------------------------
BeginMissionSequence;

GMAT InitSat = MoonSat;
GMAT MoonSat.OrbitColor = 'Yellow';

Propagate 'Prop One Orbit' NearEarthProp(MoonSat) {MoonSat.ElapsedDays = 0.081839};

Optimize NLP {SolveMode = Solve, ExitMode = DiscardAndContinue};
   Theta = MoonSat.MoonInertial.AOP + MoonSat.TA;

   %Vary 'Vary RAAN' NLP(MoonSat.MoonInertial.RAAN = 18, {Perturbation = .001, Lower = 0, Upper = 360, MaxStep = 1, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   %Propagate NearMoonProp(MoonSat) {MoonSat.ElapsedDays = 1.0};
   %Vary 'Vary AOP' NLP(MoonSat.MoonInertial.AOP = 240, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = 1, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   %Vary 'Vary Theta' NLP(Theta = 90, {Perturbation = .001, Lower = 0, Upper = 360, MaxStep = 1, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   %Vary 'Vary AOP' DC1(MoonSat.AOP = 2.5, {Perturbation = .00001, Lower = -9.999999e300, Upper = 9.999999e300, MaxStep = 5, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   RAAN = MoonSat.MoonInertial.RAAN;
   AOP = MoonSat.MoonInertial.AOP;

   Vary 'Vary EOI' NLP(EOI.Element1 = EOI.Element1, {Perturbation = .000001, Lower = -4, Upper = 4, MaxStep = .01, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary EOI' NLP(EOI.Element2 = EOI.Element2, {Perturbation = .000001, Lower = -4, Upper = 4, MaxStep = .01, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary EOI' NLP(EOI.Element3 = EOI.Element3, {Perturbation = .000001, Lower = -4, Upper = 4, MaxStep = .01, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   Maneuver 'Apply EOI' EOI(MoonSat);
   %Propagate 'Prop to Lunar Sphere' NearEarthProp(MoonSat) {MoonSat.Luna.RMAG = 50000};
   
   Vary 'Vary TOF' NLP(TOF = 3.25, {Perturbation = .0001, Lower = -2.0, Upper = 4.5, MaxStep = .3, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   Propagate 'Prop to Earth' NearEarthProp(MoonSat) {MoonSat.ElapsedDays = TOF};
   GMAT MoonSat.OrbitColor = 'Yellow';

   GMAT RMAGError = MoonSat.Earth.RMAG - 6478;
   %GMAT radPerError = MoonSat.Earth.RadPer - 6478;
   
   NonlinearConstraint NLP(RMAGError <= 10)
   NonlinearConstraint NLP(RMAGError >= -10)
   %NonlinearConstraint NLP(radPerError <= 10)
   %NonlinearConstraint NLP(radPerError >= -10)
   
   GMAT DV1 = sqrt(EOI.Element1^2 + EOI.Element2^2 + EOI.Element3^2);
   
   Minimize NLP(DV1)
EndOptimize

